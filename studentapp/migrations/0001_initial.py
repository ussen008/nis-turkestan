# Generated by Django 3.2.10 on 2022-03-02 06:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category_class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Выберите класс')),
            ],
        ),
        migrations.CreateModel(
            name='Kurator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, help_text='Имя', max_length=200)),
                ('last_name', models.CharField(blank=True, help_text='Фамилия', max_length=200)),
                ('birth_date', models.DateTimeField(auto_now_add=True)),
                ('tel_numb', models.CharField(blank=True, help_text='Номер телефона', max_length=150)),
                ('adress', models.CharField(help_text='Адресс', max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, help_text='Имя', max_length=200)),
                ('last_name', models.CharField(blank=True, help_text='Имя', max_length=200)),
                ('phone_num', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('date_of_birth', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vospitatel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vospitatel_full_name', models.CharField(max_length=200)),
                ('birth_date', models.DateTimeField(auto_now_add=True)),
                ('tel_numb', models.CharField(max_length=100)),
                ('adress', models.CharField(help_text='Адресс', max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='ФИО', max_length=250)),
                ('learning_lang', models.CharField(choices=[('казахский', 'казахский'), ('русский', 'русский')], default='каазахский', max_length=10)),
                ('IIN', models.CharField(max_length=15, verbose_name='ИИН')),
                ('disability', models.CharField(choices=[('да', 'Да'), ('нет', 'Нет')], default='нет', max_length=20)),
                ('category_fam', models.CharField(choices=[('полный', 'Полный'), ('неполный', 'Неполный')], default='Полный', max_length=10)),
                ('father_full_name', models.CharField(blank=True, max_length=200)),
                ('father_educ', models.CharField(blank=True, max_length=200)),
                ('father_pos', models.CharField(blank=True, max_length=200)),
                ('father_org', models.CharField(blank=True, max_length=250)),
                ('father_tel', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_full_name', models.CharField(blank=True, max_length=200)),
                ('mother_educ', models.CharField(blank=True, max_length=200)),
                ('mother_pos', models.CharField(blank=True, max_length=200)),
                ('mother_org', models.CharField(blank=True, max_length=250)),
                ('mother_tel', models.CharField(blank=True, max_length=100, null=True)),
                ('large_family', models.CharField(choices=[('да', 'ДА'), ('нет', 'НЕТ')], default='нет', max_length=10)),
                ('childs_in_family', models.CharField(blank=True, help_text='Количество детей', max_length=10)),
                ('adress', models.CharField(help_text='Адресс', max_length=200)),
                ('stud_photo', models.ImageField(blank=True, upload_to='media/')),
                ('stud_nationality', models.CharField(max_length=100)),
                ('stud_date_of_birth', models.DateField()),
                ('stud_age', models.CharField(max_length=200)),
                ('stud_gender', models.CharField(choices=[('female', 'Женский'), ('male', 'Мужской')], default='none', max_length=10)),
                ('stud_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('stud_tel', models.CharField(blank=True, max_length=20, null=True)),
                ('category_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentapp.category_class', verbose_name='Выберите класс')),
                ('kurator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='studentapp.kurator')),
                ('stud_tutor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='studentapp.tutor')),
                ('vospitatel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='studentapp.vospitatel')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Название')),
                ('category', models.CharField(choices=[('ОЛИМПИАДА', 'ОЛИМПИАДА'), ('НАУЧНЫЙ ПРОЕКТ', 'НАУЧНЫЙ ПРОЕКТ'), ('КРУЖОК', 'КРУЖОК')], max_length=250, verbose_name='Выберите тип деятельности')),
                ('date_of_participant', models.DateField()),
                ('result', models.FileField(upload_to='pdf/%Y/%m/%d/', verbose_name='Результат')),
                ('category_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentapp.category_class', verbose_name='Выберите класс')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentapp.student', verbose_name='Ученик')),
            ],
        ),
        migrations.CreateModel(
            name='AppealCurators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.CharField(max_length=200, verbose_name='Родители')),
                ('visited', models.BooleanField(default=False, verbose_name='Посетил')),
                ('by_telephone', models.BooleanField(default=False, verbose_name='По телефону')),
                ('by_writing', models.BooleanField(default=False, verbose_name='Письменно')),
                ('date_of_appeal', models.DateField(verbose_name='Время создания')),
                ('type_appeal', models.CharField(choices=[('вопросы внешнего суммативного оценивания', 'вопросы внешнего суммативного оценивания'), ('вопросы выбора профессии', 'вопросы выбора профессии'), ('вопросы интелектуального развития учащихся (олимпиады, проекты)', 'вопросы интелектуального развития учащихся (олимпиады, проекты)'), ('вопросы к психологической службе', 'вопросы к психологической службе'), ('вопросы общей успеваемости', 'вопросы общей успеваемости'), ('вопросы опеспечения безопастности', 'вопросы опеспечения безопастности'), ('вопросы по изучения второго иностранного языка', 'вопросы по изучения второго иностранного языка'), ('вопросы по содержанию программы и оценивания', 'вопросы по содержанию программы и оценивания'), ('вопросы поведения', 'вопросы поведения'), ('личные вопросы', 'личные вопросы'), ('не соблюдение внутренних правил школы', 'не соблюдение внутренних правил школы'), ('опаздания на урок', 'опаздания на урок'), ('по вызову мед. Работников', 'по вызову мед. Работников'), ('по тестированию IELTS', 'по тестированию IELTS'), ('по тестированию SAT ', 'по тестированию SAT '), ('Разное', 'Разное'), ('рекомендации по улучшению работы школы', 'рекомендации по улучшению работы школы')], default='Разное', max_length=200, verbose_name='Выберите тип обращение')),
                ('question', models.TextField(verbose_name='Вопрос')),
                ('category_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentapp.category_class')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentapp.student', verbose_name='Ученик')),
            ],
        ),
    ]
